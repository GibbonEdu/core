<?php
/*
Gibbon, Flexible & Open School System
Copyright (C) 2010, Ross Parker

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

namespace Gibbon\View;

/**
 * Holds the details for rendering the current page.
 *
 * @version v17
 * @since   v17
 */
class Page
{
    /**
     * Get the HTML page title.
     *
     * @return string
     */
    public function getTitle()
    {
        
    }

    /**
     * Get the current page address (?q=)
     *
     * @return string
     */
    public function getAddress()
    {
        
    }

    /**
     * Get the action instance for the current page.
     *
     * @return Action
     */
    public function getAction()
    {
        
    }

    /**
     * Get the module instance for the current page.
     *
     * @return Module
     */
    public function getModule()
    {
        
    }

    /**
     * Get the theme instance for the current page.
     *
     * @return Theme
     */
    public function getTheme()
    {
        
    }

    /**
     * Get an array of all stylesheet asset used by this page (system, module & theme).
     *
     * @return array
     */
    public function getStylesheets()
    {
        
    }

    /**
     * Get an array of script assets used by this page (system, module & theme).
     *
     * @param string $context  Optionally filter by context.
     * @return array
     */
    public function getScripts($context = null)
    {
        
    }

    /**
     * Add user feedback as a text alert displayed on this page.
     *
     * @param string $context  Contexts: error, warning, message, code
     * @param string $text
     */
    public function addAlert($context, $text)
    {
        
    }

    /**
     * Get all alerts generated by this page, by context.
     *
     * @param string $context  Contexts: error, warning, message, code
     * @param string $text
     * @return array
     */
    public function getAlerts($context = null)
    {
        
    }

    /**
     * Add a sections of raw HTML to this page.
     *
     * @param string $context  Contexts: head, foot, sidebar
     * @param string $code
     */
    public function addCode($context, $code)
    {
        
    }

    /**
     * Get all raw HTML code sections by context.
     *
     * @param string $context  Contexts: head, foot, sidebar
     * @return array
     */
    public function getCode($context)
    {
        
    }

    /**
     * Returns the collection of stylesheets used by this page.
     *
     * @return AssetBundle
     */
    public function stylesheets()
    {
        
    }

    /**
     * Returns the collection of scripts used by this page.
     *
     * @return AssetBundle
     */
    public function scripts()
    {
        
    }
}
