details:
    type: markbookEntry
    name: Markbook - Marks
    desc: Student assessment, effort and comments (requires existing markbook column)
    table: gibbonMarkbookEntry
    modes: { update: true, insert: true, export: true }
access:
    module: Markbook
    action: Edit Markbook_everything
primaryKey:
    gibbonMarkbookEntryID
uniqueKeys:
    - [ gibbonMarkbookColumnID, gibbonPersonIDStudent ]
table:
    gibbonSchoolYearID: 
        name: "School Year"
        desc: "Must match an existing school year e.g. 2015-2016"
        args: { filter: schoolyear, required: true, custom: true, readonly: true }
        relationship: { table: gibbonSchoolYear, key: gibbonSchoolYearID, field: name  }
    gibbonCourseID: 
        name: "Course"
        desc: "Short Name of a valid Course"
        args: { filter: string, required: true, custom: true, readonly: true }
        relationship: { table: gibbonCourse, key: gibbonCourseID, field: [ nameShort, gibbonSchoolYearID ]  }
    gibbonCourseClassID: 
        name: "Course Class"
        desc: "Short Name of a valid Course Class"
        args: { filter: string, required: true, custom: true, readonly: true }
        relationship: { table: gibbonCourseClass, key: gibbonCourseClassID, field: [ nameShort, gibbonCourseID ]  }
    gibbonMarkbookColumnID: 
        name: "Markbook Column"
        desc: "Name of an existing Markbook Column for this Course"
        args: { filter: string, required: true }
        relationship: { table: gibbonMarkbookColumn, key: gibbonMarkbookColumnID, field: [ name, gibbonCourseClassID ]  }
    gibbonPersonIDStudent: 
        name: "Student"
        desc: "Surname, Preferred Name"
        args: { filter: string, required: true }
        relationship: { table: gibbonPerson, key: gibbonPersonID, join: gibbonCourseClassPerson, on: [gibbonPersonID, gibbonPersonID], field: ["CONCAT(surname, ', ', preferredName)", gibbonCourseClassID] }
    attainmentValue: 
        name: "Attainment Value"
        desc: "Leave blank if attainment is not assessed."
        args: { filter: string, custom: true }
    attainmentValueRaw: 
        name: "Attainment Raw Value"
        desc: "Value from 0 to Attainment Total Mark. Omit if not using raw marks."
        args: { filter: string, custom: true }
    attainmentDescriptor: 
        name: "Attainment Descriptor"
        desc: ""
        args: { filter: string, linked: attainmentValue }
        relationship: { table: gibbonScaleGrade, key: descriptor, join: gibbonMarkbookColumn, on: [gibbonScaleIDAttainment, gibbonScaleID], field: [ value, gibbonMarkbookColumnID ] }
    # attainmentConcern: 
    #     name: "Attainment Concern?"
    #     desc: "Y, N, P"
    #     args: { filter: string, custom: true }
    effortValue: 
        name: "Effort Value"
        desc: "Leave blank if effort is not assessed."
        args: { filter: string, custom: true }
    effortDescriptor: 
        name: "Effort Descriptor"
        desc: ""
        args: { filter: string, linked: effortValue }
        relationship: { table: gibbonScaleGrade, key: descriptor, join: gibbonMarkbookColumn, on: [gibbonScaleIDEffort, gibbonScaleID], field: [ value, gibbonMarkbookColumnID ] }
    # effortConcern: 
    #     name: "Effort Concern?"
    #     desc: "Y, N, P"
    #     args: { filter: string, custom: true }
    comment: 
        name: "Comment"
        desc: "Leave blank if comments are not included."
        args: { filter: string, custom: true }
