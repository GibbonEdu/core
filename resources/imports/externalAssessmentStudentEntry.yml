details:
    type: externalAssessmentStudentEntry
    name: External Assessments - Data
    desc:
    table: gibbonExternalAssessmentStudentEntry
    modes: { update: true, insert: true, export: true }
access:
    module: Formal Assessment
    action: External Assessment Data_manage
primaryKey:
    gibbonExternalAssessmentStudentEntryID
uniqueKeys:
    - [ gibbonExternalAssessmentStudentID, gibbonExternalAssessmentFieldID ]
table:
    gibbonExternalAssessmentID:
        name: "External Assessment"
        desc: ""
        args: { filter: string, custom: true, required: true, readonly: true }
        relationship: { table: gibbonExternalAssessment, key: gibbonExternalAssessmentID, field: nameShort  }
    date:
        name: "Assessment Date"
        desc: "yyyy-mm-dd"
        args: {filter: date, custom: true, required: true, readonly: true }
    gibbonExternalAssessmentStudentID:
        name: "Student"
        desc: "Email"
        args: { filter: email, required: true }
        relationship: { table: gibbonExternalAssessmentStudent, key: gibbonExternalAssessmentStudentID, join: gibbonPerson, on: [gibbonPersonID, gibbonPersonID], field: [ email, date, gibbonExternalAssessmentID ]  }
    category:
        name: "Category"
        desc: "Must match the category of the field in the External Assessment"
        args: { filter: string, custom: true, required: true, readonly: true }
    gibbonExternalAssessmentFieldID:
        name: "Field"
        desc: "Must match the name of the field in the External Assessment"
        args: { filter: string, custom: true, required: true }
        relationship: { table: gibbonExternalAssessmentField, key: gibbonExternalAssessmentFieldID, field: [ name, category, gibbonExternalAssessmentID ]  }
    gibbonScaleID:
        name: "Grade Scale"
        desc: "nameShort"
        args: { filter: string, custom: true, required: true, readonly: true }
        relationship: { table: gibbonScale, key: gibbonScaleID, field: nameShort  }
    gibbonScaleGradeID:
        name: "Grade Value"
        desc: ""
        args: { filter: string }
        relationship: { table: gibbonScaleGrade, key: gibbonScaleGradeID, field: [ value, gibbonScaleID ] }
